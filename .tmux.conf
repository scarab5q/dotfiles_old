unbind -a
# remap prefix from 'C-b' to 'C-a'
unbind C-b
unbind C-a
set-option -g prefix C-a

# set window split
bind-key v split-window -h -c '#{pane_current_path}'
bind-key b split-window -c '#{pane_current_path}'

# General Settings
set -g history-limit 20000
set -g buffer-limit 20
set -sg escape-time 0
set -g display-time 1500
set -g remain-on-exit off
set -g repeat-time 300
setw -g allow-rename off
setw -g automatic-rename off
setw -g aggressive-resize on
set -sg escape-time 1
set -g default-terminal "tmux-256color"
# set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# Key un-Bindings
unbind C-R 
unbind C-r 
unbind "\$" # rename-session
unbind ,    # rename-window
unbind %    # split-window -h
unbind '"'  # split-window
unbind "}"    # swap-pane -D
unbind "{"    # swap-pane -U
unbind "["   # paste-buffer
unbind "]"    
unbind "'"  # select-window
unbind n    # next-window
unbind p    # previous-window
unbind l    # last-window
unbind M-n  # next window with alert
unbind M-p  # next window with alert
unbind o    # focus thru panes
unbind &    # kill-window
unbind "#"  # list-buffer 
unbind =    # choose-buffer
unbind w
unbind M-Up  # resize 5 rows up
unbind M-Down # resize 5 rows down
unbind M-Right # resize 5 rows right
unbind M-Left # resize 5 rows left

# for making one pane into a monacle
bind z resize-pane -Z   # zoom-pane

# command prompt
bind-key    -T prefix ';'                command-prompt

# hjkl pane traversal
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind c new-window -c '#{pane_current_path}'

# Swap windows and panes
bind w choose-tree -Zw "swap-window -t '%%'"
bind P choose-tree -Zw "swap-pane -t '%%'"

# 'Find' an open window
# bind f run "tmux split-window -l 12 'zsh -ci ftpane'"

bind-key f run -b ftwind
# copy mode
bind C-[ copy-mode

# Window/Pane/Session kill 
bind x kill-pane
bind X kill-window
bind C-x confirm-before -p "Kill all the other windows ?(y/n)" "kill-window -a"
bind Q confirm-before -p "kill-session #S? (y/n)" kill-session

# Rename window/session
bind-key r command-prompt -I "#{window_name}" "rename-window '%%'"
bind-key R command-prompt -I "#{session_name}" "rename-session '%%'"

# rename window after it is created
set-hook -g after-new-window 'command-prompt -I "#{window_name}" "rename-window '%%'"'

# Set parent terminal title to reflect current window in tmux session 
set -g set-titles on
set -g set-titles-string "#I:#W"

bind-key C-r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"
bind-key M split-window -h "vim ~/.tmux.conf"

bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle

# General settings

set -g base-index 1
setw -g pane-base-index 1
setw -g mode-keys vi

# pane navigation
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

is_fzf="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?fzf$'"

bind -n C-h run "($is_vim && tmux send-keys C-h) || tmux select-pane -L"

bind -n C-j run "($is_vim && tmux send-keys C-j)  || ($is_fzf && tmux send-keys C-j) || tmux select-pane -D"

bind -n C-k run "($is_vim && tmux send-keys C-k) || ($is_fzf && tmux send-keys C-k)  || tmux select-pane -U"

bind -n C-l run  "($is_vim && tmux send-keys C-l) || tmux select-pane -R"

# bind-key -n 'C-\\' if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# fixes mouse
bind-key    -T root   MouseDrag1Pane   if-shell -F -t = '#{mouse_any_flag}' "if -Ft= '#{pane_in_mode}' 'copy-mode -M' 'send-keys -M' " "copy-mode -M"

bind-key    -T root   MouseDrag1Border resize-pane -M
bind-key    -T root   WheelUpPane      if-shell -F -t = '#{mouse_any_flag}' "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -et=' "
bind-key    -T root   WheelUpStatus    previous-window
bind-key    -T root   WheelDownStatus  next-window
set -g mouse on
# to enable mouse scroll, see https://github.com/tmux/tmux/issues/146#issuecomment-150736967
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e'"

set -g @tmux-fzf-launch-key 'C-f'



# PLUGINS

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'sainnhe/tmux-fzf'

run -b '~/.tmux/plugins/tpm/tpm'


