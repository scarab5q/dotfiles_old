export TERM="xterm-256color"
LANG="en_GB.UTF-8"

# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH
# Path to your oh-my-zsh installation.
  export ZSH=/home/jack/.oh-my-zsh

# Set name of the theme to load. Optionally, if you set this to "random"
# it'll load a random theme each time that oh-my-zsh is loaded.
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
# ZSH_THEME="agnoster"
 # ZSH_THEME="powerlevel9k/powerlevel9k"
 # POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(dir vcs)
 # POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(vi_mode anaconda)
 ZSH_THEME="robbyrussell"
# Set list of themes to load
# Setting this variable when ZSH_THEME=random
# cause zsh load theme from this variable instead of
# looking in ~/.oh-my-zsh/themes/
# An empty array have no effect
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13
# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
  vi-mode
  auto-suggestions
  git
  git-extras
  gitfast
  archlinux
  # python
  github
  # sudo
  # go
  # rust
)

source $ZSH/oh-my-zsh.sh
alias config='/usr/bin/git --git-dir=$HOME/.cfg/ --work-tree=$HOME'
alias ncmpcpp='ncmpcpp -b /home/jack/.config/ncmpcpp/bindings'
# User configuration
# (wal -r &)
# Import colorscheme from 'wal' asynchronously
# &   # Run the process in the background.
# ( ) # Hide shell job control messages.
# (cat ~/.cache/wal/sequences &)

# Alternative (blocks terminal for 0-3ms)
# cat ~/.cache/wal/sequences

# To add support for TTYs this line can be optionally added.
# source ~/.cache/wal/colors-tty.sh
# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
export ALTERNATE_EDITOR=""
# export EDITOR="emacsclient -t"                  # $EDITOR opens in terminal
export EDITOR="kak"
export VISUAL="emacsclient -c -a emacs"         # $VISUAL opens in GUI mode


export SCRIPTS="/home/jack/scripts"
# export VISUAL='emacsclient -n'
# if [[ -n $SSH_CONNECTION ]]; then
#   # export EDITOR="emacsclient -c $1 &"
#   # export EDITOR="emacs -nw"
#   export EDITOR="emacsclient -n"
# else
#   # export EDITOR="emacsclient -c $1 &"
#   # export EDITOR="emacs -nw"
#   export EDITOR="emacsclient -n"
# fi


# if  grep -q "UNKNOWN" ~/"pc_type.txt" ;
# then
#     echo "PLEASE ADD PC TYPE TO ~/pc_type.txt"
# else
#     export PC_TYPE=$(cat ~/pc_type.txt | awk '{print $1;}')
# fi
# if [ ! -f ~/installed_packages_$PC_TYPE.txt ];
# then
#     touch ~/installed_packages_$PC_TYPE.txt
#     config add ~/installed_packages_$PC_TYPE.txt
# fi
# yay -Qqn > ~/installed_packages_$PC_TYPE.txt


#package_files_array =$(ls -1 ~ |grep -oP '^installed\_packages\_[a-z]+\.txt')
# Compilation flags
 export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/rsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.


ec () {
    emacsclient -c $1 &
}

et () {
    emacsclient -t $1
}

n () {
     nvim $1
}

alias randWal="wal -i ~/google_drive/Wallpaper/"

eb () {
    emacsbare $1
}

#alias ec="emacsclient -c -n -a ''"
zcfg () {
    # echo ".zshrc"
    $0 .zshrc
}

alias rangerConfig="~/.config/ranger"
alias nvimConfig="~/.SpaceVim.d/init.toml"
alias i3config="~/.config/i3/config"
alias refresh_wallpaper="$SCRIPTS/changing_wallpaper.sh"
alias ps="pacman -Ss"
alias pr="sudo pacman -R"
alias pi="sudo pacman -S"
alias pin="sudo pacman -S --noconfirm"
alias pu="sudo pacman -Syyu"
alias pun="sudo pacmanc -Syyu --noconfirm"

alias ys="yay -Ss"
alias yr="yay -R"
alias yi="yay -Sy"
alias yi="yay -S"
alias yiy="yay -Sy"
alias yin="yay -S --noconfirm"
alias yiny="yay -Sy --noconfirm"
alias yu="yay -Syyu"
alias yun="yay -Syyu --noconfirm"

alias comptonConfig="~/.config/compton.conf"
alias termiteConfig="~/.config/termite/config"
alias ohmyzsh="~/.oh-my-zsh"
alias sA="source activate"
alias ..="cd .."
alias ..2="cd ../.."
alias ..3="cd ../../.."
alias vpnSheff="sudo vpnc sheffield --local-port 0"
alias vpnSheffKill="sudo vpnc-disconnect"
alias franz="/home/jack/Downloads/franz-5.0.0-beta.16-x86_64.AppImage"
alias rm="echo Use del, or the full path i.e. usr/bin/rm to delete\n
or use rmtrash (rmt) to trash something"
alias rmt="rmtrash"
export PATH="~/chromeDriver/phantomjs-2.1.1-linux-x86_64/:$PATH"

export PATH="~/orgConversion:$PATH"
export PATH="~/.config:$PATH"
export PATH="~/.cargo/bin:$PATH"
# export RUST_SRC_PATH="${HOME}/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src"

export RUST_SRC_PATH="(rustc --print sysroot)/lib/rustlib/src/rust/src"

export PATH="$PATH:$HOME/go/bin"
export GOPATH="$HOME/go"

export PATH="~/.config/.scripts:$PATH"

# if which ruby >/dev/null && which gem >/dev/null; then
#     PATH="$(ruby -rubygems -e 'puts Gem.user_dir')/bin:$PATH"
# fi
# Add RVM to PATH for scripting. Make sure this is the last PATH variable change
export PATH="$HOME/.rvm/bin:$PATH"
[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm"

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
# source /usr/share/zsh-theme-powerlevel9k/powerlevel9k.zsh-theme

export TERMINFO=/usr/lib/terminfo
alias tensorflow="source ~/envs/tensorflow/bin/activate"
# source $HOME/.cargo/env

alias zshc="clear && zsh"

# added by Anaconda3 5.3.0 installer
# >>> conda init >>>
# !! Contents within this block are managed by 'conda init' !!
export WORKON_HOME="~/anaconda3/envs"
__conda_setup="$(CONDA_REPORT_ERRORS=false '/home/jack/anaconda3/bin/conda' shell.bash hook 2> /dev/null)"
if [ $? -eq 0 ]; then
    \eval "$__conda_setup"
else
    if [ -f "/home/jack/anaconda3/etc/profile.d/conda.sh" ]; then
	. "/home/jack/anaconda3/etc/profile.d/conda.sh"
	CONDA_CHANGEPS1=false conda activate base
    else
	\export PATH="/home/jack/anaconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda init <<<


# pushes branch with the upstream set as the current branch
cpush () {
    branch=config status | grep -oP  "(?<=branch\s)\w+"
    config push --set-upstream origin $branch
}

gpush () {
    branch=$(git status | grep -oP  "(?<=branch\s)\w+")
    echo "branch is $branch"
    git push --set-upstream origin $branch
}

# alias gpsupb="git push --set-upstream origin $(git status | grep -oP  "(?<=branch\s)\w+")"
alias klp="killall -p"

mcd () {
    mkdir -p $1
    cd $1
}


# source activate myenv

# so that 'clear' works
alias tensorflow="source ~/envs/tensorflow/bin/activate"
eval "$(fasd --init auto)"

zd() {
    local dir
    dir="$(fasd -Rdl "$1" | fzf -1 -0 --no-sort +m)" && cd "${dir}" || return 1
}

e() {
    local file
    file="$(fasd -Rfl "$1" | fzf -1 -0 --no-sort +m)" && $EDITOR "${file}" || return 1
}

alias efc='f -e emacsclient -c'
alias etc='f -e emacsclient -t'

alias c='fasd_cd -d'

# source $HOME/.cargo/env
export TASKDDATA=/var/lib/taskd
source activate myenv

getPrint () {
ag -r "print\(\w+\)" $1
}
export PATH="$SCRIPTS:$PATH"


gpush () {
branch=$(git status | grep -oP "branch (\w+)")

if [ ! $(git log | grep -oP "$branch" ) ]
then
    git push
else
    git push --set-upstream origin $branch
fi
}
export I3="~/.config/i3"

lls () {
  ll -a | grep "$1"
}

cfgC () {
    config add /home/jack/scripts/
    config commit -am "$1"
    config push
}

export FZF_DEFAULT_COMMAND="fd --hidden . $HOME"
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
export FZF_ALT_C_COMMAND="fd -t d . $HOME"

# if which tmux >/dev/null 2>&1; then
#     #if not inside a tmux session, and if no session is started, start a new session
#     test -z "$TMUX" && (tmux attach || tmux new-session)
# fi
